/**
 * POST /api/admin/telegram/test ‚Äî —Ç–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram –±–æ—Ç–∞ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 */

import { NextRequest, NextResponse } from 'next/server';
import { withAdminAuth } from '@/lib/admin-middleware';
import { telegramBotService } from '@/lib/telegram-bot-service';

async function postHandler(
  request: NextRequest,
  context: any
) {
  try {
    const admin = context.admin;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const success = await telegramBotService.sendAdminNotification({
      type: 'system_alert',
      title: 'üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
      message: `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${admin.email} –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É Telegram –±–æ—Ç–∞`,
      metadata: {
        '–¢–∏–ø —Ç–µ—Å—Ç–∞': '–†—É—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏',
        '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä': admin.email,
        '–°—Ç–∞—Ç—É—Å': '–£—Å–ø–µ—à–Ω–æ',
      },
      priority: 'medium',
    });

    if (success) {
      return NextResponse.json({
        success: true,
        message: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram',
      });
    } else {
      return NextResponse.json(
        {
          success: false,
          message: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞ –≤ –ø—Ä–æ—Ñ–∏–ª–µ.',
        },
        { status: 400 }
      );
    }
  } catch (error) {
    console.error('[Admin Telegram Test] Error:', error);
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è' },
      { status: 500 }
    );
  }
}

export const POST = withAdminAuth(postHandler);
