/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –±–µ–∑ –ø–æ–ª–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ–ø–ª–∏–≤–µ
 * –ó–∞–¥–∞—á–∏ 10.5 –∏ 10.6 –∏–∑ OCR-REPORTS.md
 */

import { FoundationModelsClient } from './foundation-models-client';

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
export interface TransportDocumentData {
  vehicle: {
    model: string;
    licensePlate: string;
    modelConfidence: number;
  };
  route: {
    from: string;
    to: string;
    fromCity: string;
    toCity: string;
  };
  cargo?: {
    weight: number;
    unit: string;
  };
  driver?: string;
  date?: string;
}

// –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ —Ç–æ–ø–ª–∏–≤–∞
export interface FuelTypeResult {
  fuelType: 'gasoline' | 'diesel' | 'unknown';
  confidence: number;
  reasoning: string;
  year?: number;
  engineType?: string;
}

// –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è
export interface RouteDistanceResult {
  distance: number;
  distanceSource: 'ai' | 'cache' | 'user';
  confidence: number;
  reasoning?: string;
}

// –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ –≤—ã–±—Ä–æ—Å–æ–≤
export interface EmissionsResult {
  fuelConsumption: number;     // –ª
  co2Emissions: number;        // –∫–≥ CO‚ÇÇ
  coefficient: number;         // –∫–≥ CO‚ÇÇ/–ª
  calculationMethod: string;   // '296-FZ-transport-prikas-371'
}

// –ü–æ–ª–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
export interface TransportProcessingResult {
  vehicle: TransportDocumentData['vehicle'] & {
    fuelType: FuelTypeResult;
  };
  route: TransportDocumentData['route'] & {
    distance: RouteDistanceResult;
  };
  cargo?: TransportDocumentData['cargo'];
  emissions?: EmissionsResult;
  needsUserReview: boolean;
  confidenceScore: number;       // –æ–±—â–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å 0-1
}

// –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –≤—ã–±—Ä–æ—Å–æ–≤ –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ (–∫–≥ CO‚ÇÇ/–ª)
// –ò—Å—Ç–æ—á–Ω–∏–∫: –ü—Ä–∏–∫–∞–∑ –ú–∏–Ω–ø—Ä–∏—Ä–æ–¥—ã –†–§ ‚Ññ371
const TRANSPORT_EMISSION_FACTORS = {
  gasoline: {
    coefficient: 2.31 * 0.75,   // 2.31 —Ç CO‚ÇÇ/—Ç √ó 0.75 –∫–≥/–ª = 1.7325 –∫–≥ CO‚ÇÇ/–ª
    unit: '–∫–≥ CO‚ÇÇ/–ª',
    description: '–ë–µ–Ω–∑–∏–Ω (–≤—Å–µ –º–∞—Ä–∫–∏: –ê–ò-92, –ê–ò-95, –ê–ò-98)',
    source: '–ü—Ä–∏–∫–∞–∑ ‚Ññ371, –ø–µ—Ä–µ—Å—á–µ—Ç —á–µ—Ä–µ–∑ –ø–ª–æ—Ç–Ω–æ—Å—Ç—å'
  },
  diesel: {
    coefficient: 2.67 * 0.84,   // 2.67 —Ç CO‚ÇÇ/—Ç √ó 0.84 –∫–≥/–ª = 2.2428 –∫–≥ CO‚ÇÇ/–ª
    unit: '–∫–≥ CO‚ÇÇ/–ª',
    description: '–î–∏–∑–µ–ª—å–Ω–æ–µ —Ç–æ–ø–ª–∏–≤–æ',
    source: '–ü—Ä–∏–∫–∞–∑ ‚Ññ371, –ø–µ—Ä–µ—Å—á–µ—Ç —á–µ—Ä–µ–∑ –ø–ª–æ—Ç–Ω–æ—Å—Ç—å'
  }
};

// –¢–∏–ø–æ–≤—ã–µ –Ω–æ—Ä–º—ã —Ä–∞—Å—Ö–æ–¥–∞ –ø–æ —Ç–∏–ø–∞–º –¢–° (–ª/100 –∫–º)
// –ò—Å—Ç–æ—á–Ω–∏–∫: –ü—Ä–∏–∫–∞–∑ –ú–∏–Ω—Ç—Ä–∞–Ω—Å–∞ –†–§ –æ—Ç 14.03.2008 N –ê–ú-23-—Ä
const VEHICLE_CONSUMPTION_ESTIMATES: Record<string, number> = {
  '–≥–∞–∑–µ–ª—å': 12.5,
  '–∫–∞–º–∞–∑': 28.0,
  '—Ñ—É—Ä–∞': 35.0,
  '–ª–µ–≥–∫–æ–≤–æ–π': 8.0,
  '–ª–µ–≥–∫–æ–≤–∞—è': 8.0,
  '–º–∏–∫—Ä–æ–∞–≤—Ç–æ–±—É—Å': 10.0,
  '–≥—Ä—É–∑–æ–≤–∏–∫': 25.0,
  '—Ç—è–≥–∞—á': 32.0
};

/**
 * –û—Ü–µ–Ω–∏–≤–∞–µ—Ç —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞ –ø–æ –º–æ–¥–µ–ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ —Å—Ä–µ–¥—Å—Ç–≤–∞
 */
function estimateConsumption(vehicleModel: string): number {
  const normalizedModel = vehicleModel.toLowerCase();

  // –ü–æ–∏—Å–∫ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –≤ –º–æ–¥–µ–ª–∏
  for (const [key, consumption] of Object.entries(VEHICLE_CONSUMPTION_ESTIMATES)) {
    if (normalizedModel.includes(key)) {
      return consumption;
    }
  }

  // –î–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ä–∞—Å—Ö–æ–¥ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –º–æ–¥–µ–ª–∏ (—Å—Ä–µ–¥–Ω–∏–π –≥—Ä—É–∑–æ–≤–∏–∫)
  console.warn(`‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å "${vehicleModel}", –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ä–µ–¥–Ω–∏–π —Ä–∞—Å—Ö–æ–¥ 20 –ª/100–∫–º`);
  return 20.0;
}

/**
 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤—ã–±—Ä–æ—Å—ã CO‚ÇÇ –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
 * –ó–∞–¥–∞—á–∞ 10.6.2 –∏–∑ OCR-REPORTS.md
 */
export function calculateTransportEmissions(
  fuelType: 'gasoline' | 'diesel',
  distance: number,              // –∫–º
  vehicleModel: string,
  cargoWeight?: number           // —Ç–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ —Ä–∞—Å—Ö–æ–¥–∞)
): EmissionsResult {
  console.log(`üßÆ –†–∞—Å—á–µ—Ç –≤—ã–±—Ä–æ—Å–æ–≤: ${vehicleModel}, ${distance} –∫–º, —Ç–æ–ø–ª–∏–≤–æ: ${fuelType}`);

  // 1. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –±–∞–∑–æ–≤—ã–π —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞ –ø–æ –º–æ–¥–µ–ª–∏
  const baseConsumption = estimateConsumption(vehicleModel);

  // 2. –°–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –≤–µ—Å –≥—Ä—É–∑–∞ (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω)
  const adjustedConsumption = cargoWeight
    ? baseConsumption * (1 + cargoWeight * 0.05) // +5% –Ω–∞ –∫–∞–∂–¥—É—é —Ç–æ–Ω–Ω—É
    : baseConsumption;

  // 3. –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ–±—â–µ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Ç–æ–ø–ª–∏–≤–∞
  const totalFuel = (distance / 100) * adjustedConsumption;

  // 4. –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —ç–º–∏—Å—Å–∏–∏
  const coefficient = TRANSPORT_EMISSION_FACTORS[fuelType].coefficient;
  const co2Emissions = totalFuel * coefficient;

  console.log(`‚úÖ –†–∞—Å—á–µ—Ç: ${totalFuel.toFixed(2)} –ª √ó ${coefficient.toFixed(4)} = ${co2Emissions.toFixed(2)} –∫–≥ CO‚ÇÇ`);

  return {
    fuelConsumption: totalFuel,
    co2Emissions,
    coefficient,
    calculationMethod: '296-FZ-transport-prikas-371'
  };
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —Å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∫ GLM-4.6
 * –ó–∞–¥–∞—á–∞ 10.5 –∏–∑ OCR-REPORTS.md
 */
export async function processTransportDocumentParallel(
  extractedData: TransportDocumentData,
  foundationModelsClient: FoundationModelsClient
): Promise<TransportProcessingResult> {
  console.log('üöÄ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞...');

  const { vehicle, route, cargo } = extractedData;

  try {
    // ‚úÖ –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–´–ï –ó–ê–ü–†–û–°–´ (—ç–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏: 2-3 —Å–µ–∫ –≤–º–µ—Å—Ç–æ 4-6 —Å–µ–∫)
    const [fuelTypeResult, distanceResult] = await Promise.all([
      foundationModelsClient.determineFuelType(vehicle.model, vehicle.licensePlate),
      foundationModelsClient.calculateRouteDistance(route.fromCity, route.toCity)
    ]);

    console.log('‚úÖ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã:', {
      fuelType: fuelTypeResult.fuelType,
      distance: distanceResult.distance
    });

    // –†–∞—Å—á–µ—Ç –≤—ã–±—Ä–æ—Å–æ–≤ (–µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–æ–ø–ª–∏–≤–æ –∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ)
    let emissions: EmissionsResult | undefined;
    if (fuelTypeResult.fuelType !== 'unknown' && distanceResult.distance > 0) {
      emissions = calculateTransportEmissions(
        fuelTypeResult.fuelType,
        distanceResult.distance,
        vehicle.model,
        cargo?.weight
      );
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω—É–∂–µ–Ω –ª–∏ —Ä—É—á–Ω–æ–π –ø–µ—Ä–µ—Å–º–æ—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    const needsUserReview =
      fuelTypeResult.confidence < 0.7 ||
      distanceResult.confidence < 0.7 ||
      fuelTypeResult.fuelType === 'unknown' ||
      distanceResult.distance === 0;

    // –û–±—â–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
    const confidenceScore = (fuelTypeResult.confidence + distanceResult.confidence) / 2;

    return {
      vehicle: {
        ...vehicle,
        fuelType: fuelTypeResult
      },
      route: {
        ...route,
        distance: distanceResult
      },
      cargo,
      emissions,
      needsUserReview,
      confidenceScore
    };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error);

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –Ω–∏–∑–∫–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é
    return {
      vehicle: {
        ...vehicle,
        fuelType: {
          fuelType: 'unknown',
          confidence: 0,
          reasoning: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ç–∏–ø–∞ —Ç–æ–ø–ª–∏–≤–∞'
        }
      },
      route: {
        ...route,
        distance: {
          distance: 0,
          distanceSource: 'ai',
          confidence: 0,
          reasoning: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è'
        }
      },
      cargo,
      needsUserReview: true,
      confidenceScore: 0
    };
  }
}

/**
 * –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
 */
export { TRANSPORT_EMISSION_FACTORS, VEHICLE_CONSUMPTION_ESTIMATES };
