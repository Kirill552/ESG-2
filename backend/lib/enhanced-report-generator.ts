/**
 * –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤ 296-–§–ó
 * –û–±—ä–µ–¥–∏–Ω—è–µ—Ç template-engine, pdf-generator –∏ emission-calculator
 * –ù–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ MVP
 */

import fs from 'fs/promises';
import path from 'path';
import { processTemplate, TemplateData, ReportType } from './template-engine';
import { generateReportPDF, PDFGenerationResult } from './pdf-generator';
import { calculateEmissions, EmissionData, EmissionResult, computeTotalCO2eRaw } from './emission-calculator';

export interface ReportGenerationData {
  // –û–±—â–∏–µ –ø–æ–ª—è
  org_name: string;
  org_address: string;
  signer_name: string;
  signer_position?: string;
  sign_date: string;
  generation_date: string;
  generation_time: string;
  document_id: string;

  // –ü–æ–ª—è –¥–ª—è 296-FZ
  org_inn?: string;
  org_okpo?: string;
  org_oktmo?: string;
  org_phone?: string;
  org_email?: string;
  report_year?: string;
  organizationLegalForm?: string; // –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ-–ø—Ä–∞–≤–æ–≤–∞—è —Ñ–æ—Ä–º–∞ (–û–û–û, –ê–û, –∏ —Ç.–¥.)

  // –ü–æ–ª—è –¥–ª—è CBAM
  eori?: string;
  cbam_id?: string;
  org_country?: string;
  report_year_q?: string;

  // –ü–æ–ª—è –¥–ª—è CF (—É–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥)
  scope1?: string;
  scope2?: string;
  scope3?: string;
  total_co2e?: string;
  intensity?: string;
  data_quality?: string;

  // –î–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö/–≤—ã–±—Ä–æ—Å–∞—Ö (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ)
  [key: string]: string | number | boolean | undefined;
}

export interface ReportGenerationOptions {
  outputDir?: string;
  templateDir?: string;
  includeMetadata?: boolean;
  writeToDisk?: boolean;
}

export interface ReportGenerationResult {
  success: boolean;
  html?: string;
  pdf?: Buffer;
  filePath?: string;
  fileName?: string;
  fileSize?: number;
  templateErrors?: string[];
  unreplacedTokens?: string[];
  error?: string;
  totalEmissionsRaw?: number;
  fullReportData?: ReportGenerationData;
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ HTML —à–∞–±–ª–æ–Ω–∞
 */
async function loadTemplate(reportType: ReportType, templateDir: string = 'templates'): Promise<string> {
  const templateFileName = reportType === '296-FZ'
    ? 'ru-296fz-report-2025.html'
    : reportType === 'CBAM'
      ? 'eu-cbam-quarterly-2025.html'
      : 'ru-carbon-footprint-2025.html';

  const templatePath = path.join(templateDir, templateFileName);

  try {
    return await fs.readFile(templatePath, 'utf-8');
  } catch (error) {
    // Fallback: –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω
    if (reportType === '296-FZ') {
      return `<!DOCTYPE html><html lang="ru"><head><meta charset="UTF-8"><title>–û—Ç—á–µ—Ç 296‚Äë–§–ó</title>
        <style>body{font-family:DejaVu Sans, Arial, sans-serif;padding:24px;font-size:12pt}</style>
      </head><body>
        <h1>–û—Ç—á–µ—Ç –æ –≤—ã–±—Ä–æ—Å–∞—Ö (296‚Äë–§–ó)</h1>
        <p><strong>–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:</strong> [[org_name]] (–ò–ù–ù [[org_inn]])</p>
        <p><strong>–ê–¥—Ä–µ—Å:</strong> [[org_address]]</p>
        <p><strong>–û—Ç—á–µ—Ç–Ω—ã–π –≥–æ–¥:</strong> [[report_year]]</p>
        <hr/>
        <h2>–ò—Ç–æ–≥–∏</h2>
        <p><strong>–°–æ–≤–æ–∫—É–ø–Ω—ã–µ –≤—ã–±—Ä–æ—Å—ã, —Ç CO‚ÇÇ‚Äë—ç–∫–≤:</strong> [[total_co2e]]</p>
        <h2>–ü–æ–¥–ø–∏—Å–∞–Ω—Ç</h2>
        <p>[[signer_name]], [[signer_position]]</p>
        <p>–¢–µ–ª.: [[org_phone]]</p>
        <p>–î–∞—Ç–∞: [[sign_date]]</p>
      </body></html>`;
    }
    return '<html><body><h1>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–∞</h1></body></html>';
  }
}

/**
 * –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
 */
function prepareTemplateData(
  data: ReportGenerationData,
  reportType: ReportType,
  includeMetadata: boolean = true
): TemplateData {
  const now = new Date();

  const baseData: TemplateData = { ...data };

  if (includeMetadata) {
    baseData.generation_date = data.generation_date || now.toLocaleDateString('ru-RU');
    baseData.generation_time = data.generation_time || now.toLocaleTimeString('ru-RU');
    baseData.document_id = data.document_id || `${reportType}_${Date.now()}`;
    baseData.sign_date = data.sign_date || now.toLocaleDateString('ru-RU');
  }

  // –ú–∞–ø–ø–∏–Ω–≥ –ø–æ–ª–µ–π –¥–ª—è —à–∞–±–ª–æ–Ω–∞ 296-FZ
  if (reportType === '296-FZ') {
    // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    baseData.inn = data.org_inn || baseData.inn || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.address = data.org_address || baseData.address || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.org_inn = baseData.inn;
    baseData.org_address = baseData.address;
    baseData.phone = data.org_phone || baseData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.email = data.org_email || baseData.email || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.okpo = data.org_okpo || baseData.okpo || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.oktmo = data.org_oktmo || baseData.oktmo || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';

    // –ü–æ–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω—Ç–∞ –¥–ª—è 296-FZ (executor)
    baseData.executor_fio = data.signer_name || baseData.executor_fio || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.executor_phone = data.org_phone || baseData.executor_phone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è 296-FZ
    baseData.legal_form = data.organizationLegalForm || baseData.legal_form || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
    baseData.ogrn = baseData.ogrn || data.org_okpo || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.okved = baseData.okved || '38.11';
    baseData.submission_basis = baseData.submission_basis || '–ø. 4 —Å—Ç. 23 296-–§–ó';

    // –î–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–æ—Å–∞—Ö (–∑–∞–ø–æ–ª–Ω—è–µ–º –±–∞–∑–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã)
    baseData.co2_mass = baseData.co2_mass || '0';
    baseData.co2e_co2 = baseData.co2e_co2 || '0';
    baseData.co2_percent = baseData.co2_percent || '0';
    baseData.ch4_mass = baseData.ch4_mass || '0';
    baseData.co2e_ch4 = baseData.co2e_ch4 || '0';
    baseData.ch4_percent = baseData.ch4_percent || '0';
    baseData.n2o_mass = baseData.n2o_mass || '0';
    baseData.co2e_n2o = baseData.co2e_n2o || '0';
    baseData.n2o_percent = baseData.n2o_percent || '0';
    baseData.hfc_mass = baseData.hfc_mass || '0';
    baseData.hfc_gwp = baseData.hfc_gwp || '0';
    baseData.co2e_hfc = baseData.co2e_hfc || '0';
    baseData.hfc_percent = baseData.hfc_percent || '0';
    baseData.pfc_mass = baseData.pfc_mass || '0';
    baseData.pfc_gwp = baseData.pfc_gwp || '0';
    baseData.co2e_pfc = baseData.co2e_pfc || '0';
    baseData.pfc_percent = baseData.pfc_percent || '0';
    baseData.sf6_mass = baseData.sf6_mass || '0';
    baseData.co2e_sf6 = baseData.co2e_sf6 || '0';
    baseData.sf6_percent = baseData.sf6_percent || '0';
    baseData.total_co2e = baseData.total_co2e || '0';

    // –ü—Ä–æ—Ü–µ—Å—Å—ã
    baseData.proc_1_code = baseData.proc_1_code || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.proc_1_desc = baseData.proc_1_desc || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.proc_1_nvos = baseData.proc_1_nvos || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    baseData.proc_1_capacity = baseData.proc_1_capacity || '0';
    baseData.proc_1_unit = baseData.proc_1_unit || '—à—Ç.';

    baseData.proc_2_code = baseData.proc_2_code || '';
    baseData.proc_2_desc = baseData.proc_2_desc || '';
    baseData.proc_2_nvos = baseData.proc_2_nvos || '';
    baseData.proc_2_capacity = baseData.proc_2_capacity || '';
    baseData.proc_2_unit = baseData.proc_2_unit || '';
  }

  return baseData;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç PDF –∏–∑ HTML
 */
async function generatePDFFromHTML(html: string): Promise<Buffer> {
  const puppeteer = require('puppeteer');

  const browser = await puppeteer.launch({
    headless: true,
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  });

  try {
    const page = await browser.newPage();
    await page.setContent(html, { waitUntil: 'networkidle0' });

    const pdf = await page.pdf({
      format: 'A4',
      margin: {
        top: '20mm',
        right: '20mm',
        bottom: '20mm',
        left: '20mm'
      },
      printBackground: true,
      displayHeaderFooter: true,
      headerTemplate: '<div style="font-size: 10px; margin: 0 auto;">296-–§–ó –û—Ç—á–µ—Ç –æ –≤—ã–±—Ä–æ—Å–∞—Ö –ø–∞—Ä–Ω–∏–∫–æ–≤—ã—Ö –≥–∞–∑–æ–≤</div>',
      footerTemplate: '<div style="font-size: 10px; margin: 0 auto;">–°—Ç—Ä–∞–Ω–∏—Ü–∞ <span class="pageNumber"></span> –∏–∑ <span class="totalPages"></span></div>'
    });

    return Buffer.from(pdf);
  } finally {
    await browser.close();
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞
 */
export async function generateReport(
  reportType: ReportType,
  data: ReportGenerationData,
  options: ReportGenerationOptions = {}
): Promise<ReportGenerationResult> {
  try {
    const {
      outputDir = 'public/reports',
      templateDir = 'templates',
      includeMetadata = true,
      writeToDisk = true
    } = options;

    console.log(`üìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ ${reportType} –¥–ª—è ${data.org_name}`);

    // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω
    const template = await loadTemplate(reportType, templateDir);
    console.log(`‚úÖ –®–∞–±–ª–æ–Ω ${reportType} –∑–∞–≥—Ä—É–∂–µ–Ω`);

    // 2. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const templateData = prepareTemplateData(data, reportType, includeMetadata);

    // 3. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —à–∞–±–ª–æ–Ω
    const templateResult = processTemplate(template, templateData, reportType);

    if (templateResult.errors.length > 0) {
      return {
        success: false,
        templateErrors: templateResult.errors,
        error: '–û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞'
      };
    }

    if (templateResult.unreplacedTokens.length > 0) {
      console.warn('‚ö†Ô∏è –ù–µ–∑–∞–º–µ–Ω–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã:', templateResult.unreplacedTokens);
    }

    console.log('‚úÖ –®–∞–±–ª–æ–Ω –æ–±—Ä–∞–±–æ—Ç–∞–Ω, —Ç–æ–∫–µ–Ω—ã –∑–∞–º–µ–Ω–µ–Ω—ã');

    // 4. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
    let filePath: string | undefined;
    let pdfBuffer: Buffer | undefined;

    if (writeToDisk) {
      const reportPeriod = reportType === '296-FZ'
        ? (data.report_year || '2025')
        : reportType === 'CBAM'
          ? (data.report_year_q || '2025-2')
          : (data.report_year || '2025');

      const pdfResult = await generateReportPDF(
        templateResult.processedHtml,
        reportType,
        data.org_name,
        reportPeriod,
        outputDir
      );

      if (!pdfResult.success) {
        return {
          success: false,
          error: `–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF: ${pdfResult.error}`
        };
      }

      filePath = pdfResult.filePath;
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF –≤ –±—É—Ñ–µ—Ä –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    pdfBuffer = await generatePDFFromHTML(templateResult.processedHtml);

    console.log(`üéâ –û—Ç—á–µ—Ç ${reportType} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω`);

    return {
      success: true,
      html: templateResult.processedHtml,
      pdf: pdfBuffer,
      filePath,
      fileName: filePath ? path.basename(filePath) : undefined,
      fileSize: pdfBuffer?.length,
      unreplacedTokens: templateResult.unreplacedTokens,
      fullReportData: data
    };

  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ ${reportType}:`, error);

    return {
      success: false,
      error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
    };
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ 296-FZ —Å —Ä–∞—Å—á–µ—Ç–æ–º –≤—ã–±—Ä–æ—Å–æ–≤
 */
export async function generate296FZReport(
  data: ReportGenerationData,
  options?: ReportGenerationOptions
): Promise<ReportGenerationResult> {
  // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–æ—Å–∞—Ö - —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º
  if (data.co2_mass || data.ch4_mass || data.n2o_mass) {
    const emissionData: EmissionData = {
      co2_mass: parseFloat(String(data.co2_mass || 0)),
      ch4_mass: parseFloat(String(data.ch4_mass || 0)),
      n2o_mass: parseFloat(String(data.n2o_mass || 0)),
      hfc_mass: parseFloat(String(data.hfc_mass || 0)),
      pfc_mass: parseFloat(String(data.pfc_mass || 0)),
      sf6_mass: parseFloat(String(data.sf6_mass || 0))
    };

    const calculatedEmissions = calculateEmissions(emissionData);
    const rawEmissions = computeTotalCO2eRaw(emissionData);

    // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫ –¥–∞–Ω–Ω—ã–º
    const enhancedData = {
      ...data,
      ...calculatedEmissions,
      totalEmissionsRaw: rawEmissions.total
    };

    const result = await generateReport('296-FZ', enhancedData, options);

    if (result.success) {
      result.totalEmissionsRaw = rawEmissions.total;
    }

    return result;
  }

  return generateReport('296-FZ', data, options);
}

/**
 * –ü–æ–ª–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ 296-–§–ó —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –≤—ã–±—Ä–æ—Å–∞—Ö –∏ PDF
 */
export async function generate296FZFullReport(
  reportData: {
    organizationId: string;
    organizationName: string;
    documentId: string;
    reportId: string;
    period: string;
    methodology: string;
    submissionDeadline?: Date;
    organizationInn?: string;
    organizationAddress?: string;
    emissionData: {
      scope1: number;
      scope2: number;
      scope3: number;
      total: number;
      sources?: {
        energy?: number;
        transport?: number;
        production?: number;
        waste?: number;
        suppliers?: number;
      };
    };
    variables?: Record<string, any>;
  },
  options: ReportGenerationOptions = {}
): Promise<ReportGenerationResult> {
  try {
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —à–∞–±–ª–æ–Ω–∞
    const now = new Date();

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–æ—Å–∞—Ö –≤ —Ñ–æ—Ä–º–∞—Ç 296-–§–ó
    // –£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: scope1 -> CO2, scope2 -> CH4, scope3 -> N2O
    const co2_mass = reportData.emissionData.scope1 / 1; // GWP CO2 = 1
    const ch4_mass = reportData.emissionData.scope2 / 28; // GWP CH4 = 28
    const n2o_mass = reportData.emissionData.scope3 / 265; // GWP N2O = 265

    const emissionData: EmissionData = {
      co2_mass,
      ch4_mass,
      n2o_mass,
      hfc_mass: 0,
      pfc_mass: 0,
      sf6_mass: 0  // –£–±—Ä–∞–Ω–æ –º–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 0.001 (–±—ã–ª–æ 23.5 —Ç–æ–Ω–Ω CO‚ÇÇ-—ç–∫–≤)
    };

    const calculatedEmissions = calculateEmissions(emissionData);
    const rawEmissions = computeTotalCO2eRaw(emissionData);

    const templateData: ReportGenerationData = {
      org_name: reportData.organizationName,
      org_address: reportData.organizationAddress || '–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω',
      org_inn: reportData.organizationInn || '0000000000',
      signer_name: reportData.variables?.responsible_person || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
      signer_position: '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å',
      sign_date: now.toLocaleDateString('ru-RU'),
      generation_date: now.toLocaleDateString('ru-RU'),
      generation_time: now.toLocaleTimeString('ru-RU'),
      document_id: reportData.documentId,
      report_year: reportData.period,
      org_phone: reportData.variables?.phone_number || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
      org_email: reportData.variables?.email || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',

      // –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–µ –≤—ã–±—Ä–æ—Å—ã
      ...calculatedEmissions,

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
      ...reportData.variables
    };

    const result = await generateReport('296-FZ', templateData, options);

    if (result.success) {
      result.totalEmissionsRaw = rawEmissions.total;
    }

    return {
      ...result,
      meta: {
        organizationId: reportData.organizationId,
        documentId: reportData.documentId,
        reportId: reportData.reportId,
        emissionData: reportData.emissionData
      }
    };

  } catch (error) {
    const message = error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
    return {
      success: false,
      error: `–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç 296-–§–ó: ${message}`
    };
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ CBAM
 */
export async function generateCBAMReport(
  data: ReportGenerationData,
  options?: ReportGenerationOptions
): Promise<ReportGenerationResult> {
  return generateReport('CBAM', data, options);
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ Carbon Footprint (CF)
 */
export async function generateCFReport(
  data: ReportGenerationData,
  options?: ReportGenerationOptions
): Promise<ReportGenerationResult> {
  return generateReport('CF', data, options);
}