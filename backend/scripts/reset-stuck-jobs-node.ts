/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ –∑–∞–≤–∏—Å—à–∏—Ö –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
 */

import * as dotenv from 'dotenv';
import * as path from 'path';
import { Client } from 'pg';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const envPath = path.resolve(process.cwd(), '.env');
dotenv.config({ path: envPath });

async function resetStuckJobs() {
  console.log('üîß –°–±—Ä–æ—Å –∑–∞–≤–∏—Å—à–∏—Ö –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–µ SQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...\n');

  const client = new Client({
    connectionString: process.env.DATABASE_URL
  });

  try {
    await client.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ PostgreSQL\n');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    console.log('üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–¥–∞—á:');
    const statsBefore = await client.query(`
      SELECT state, COUNT(*) as count
      FROM pgboss.job
      WHERE name = 'ocr-processing'
      GROUP BY state
    `);

    statsBefore.rows.forEach(row => {
      console.log(`   - ${row.state}: ${row.count}`);
    });
    console.log('');

    // –ü–æ–º–µ—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∫–∞–∫ failed
    const updateResult = await client.query(`
      UPDATE pgboss.job
      SET state = 'failed',
          completedon = NOW(),
          output = '{"error": "Task was stuck in active state and manually reset"}'::jsonb
      WHERE name = 'ocr-processing'
        AND state = 'active'
    `);

    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–¥–∞—á: ${updateResult.rowCount}\n`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:');
    const statsAfter = await client.query(`
      SELECT state, COUNT(*) as count
      FROM pgboss.job
      WHERE name = 'ocr-processing'
      GROUP BY state
    `);

    statsAfter.rows.forEach(row => {
      console.log(`   - ${row.state}: ${row.count}`);
    });

    await client.end();
    console.log('\n‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    process.exit(0);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    await client.end();
    process.exit(1);
  }
}

resetStuckJobs();
